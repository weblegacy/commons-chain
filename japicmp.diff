Comparing source compatibility of /home/stefan/eclipse-workspace/commons-chain/target/commons-chain-1.3-SNAPSHOT.jar against /home/stefan/.m2/repository/commons-chain/commons-chain/1.2/commons-chain-1.2.jar
===* UNCHANGED INTERFACE: PUBLIC ABSTRACT org.apache.commons.chain.Catalog  (not serializable)
	***! CLASS FILE FORMAT VERSION: 52.0 <- 47.0
	GENERIC TEMPLATES: +++ C:org.apache.commons.chain.Context
	===  UNCHANGED SUPERCLASS: java.lang.Object (<- java.lang.Object)
	===  UNCHANGED FIELD: PUBLIC STATIC FINAL java.lang.String CATALOG_KEY
	===* UNCHANGED METHOD: PUBLIC ABSTRACT void addCommand(java.lang.String, org.apache.commons.chain.Command<C>)
		GENERIC TEMPLATES: +++ CMD:org.apache.commons.chain.Command<C>
	===* UNCHANGED METHOD: PUBLIC ABSTRACT org.apache.commons.chain.Command getCommand(java.lang.String)
		GENERIC TEMPLATES: +++ CMD:org.apache.commons.chain.Command<C>
	===* UNCHANGED METHOD: PUBLIC ABSTRACT java.util.Iterator<java.lang.String> getNames()
===* UNCHANGED CLASS: PUBLIC ABSTRACT org.apache.commons.chain.CatalogFactory  (not serializable)
	***! CLASS FILE FORMAT VERSION: 52.0 <- 47.0
	GENERIC TEMPLATES: +++ C:org.apache.commons.chain.Context
	===  UNCHANGED SUPERCLASS: java.lang.Object (<- java.lang.Object)
	===  UNCHANGED FIELD: PUBLIC STATIC FINAL java.lang.String DELIMITER
	===  UNCHANGED CONSTRUCTOR: PUBLIC CatalogFactory()
	===* UNCHANGED METHOD: PUBLIC ABSTRACT void addCatalog(java.lang.String, org.apache.commons.chain.Catalog<C>)
	===  UNCHANGED METHOD: PUBLIC STATIC void clear()
	===* UNCHANGED METHOD: PUBLIC ABSTRACT org.apache.commons.chain.Catalog<C> getCatalog()
	===* UNCHANGED METHOD: PUBLIC ABSTRACT org.apache.commons.chain.Catalog<C> getCatalog(java.lang.String)
	===* UNCHANGED METHOD: PUBLIC org.apache.commons.chain.Command getCommand(java.lang.String)
		GENERIC TEMPLATES: +++ CMD:org.apache.commons.chain.Command<C>
	===* UNCHANGED METHOD: PUBLIC STATIC org.apache.commons.chain.CatalogFactory<C> getInstance()
		GENERIC TEMPLATES: +++ C:org.apache.commons.chain.Context
	===* UNCHANGED METHOD: PUBLIC ABSTRACT java.util.Iterator<java.lang.String> getNames()
	===* UNCHANGED METHOD: PUBLIC ABSTRACT void setCatalog(org.apache.commons.chain.Catalog<C>)
===* UNCHANGED INTERFACE: PUBLIC ABSTRACT org.apache.commons.chain.Chain  (not serializable)
	***! CLASS FILE FORMAT VERSION: 52.0 <- 47.0
	GENERIC TEMPLATES: +++ C:org.apache.commons.chain.Context
	===* UNCHANGED INTERFACE: org.apache.commons.chain.Command
	===  UNCHANGED SUPERCLASS: java.lang.Object (<- java.lang.Object)
	===* UNCHANGED METHOD: PUBLIC ABSTRACT void addCommand(org.apache.commons.chain.Command<C>)
		GENERIC TEMPLATES: +++ CMD:org.apache.commons.chain.Command<C>
	===  UNCHANGED METHOD: PUBLIC ABSTRACT boolean execute(org.apache.commons.chain.Context)
		===  UNCHANGED EXCEPTION: java.lang.Exception
===* UNCHANGED INTERFACE: PUBLIC ABSTRACT org.apache.commons.chain.Command  (not serializable)
	***! CLASS FILE FORMAT VERSION: 52.0 <- 47.0
	GENERIC TEMPLATES: +++ C:org.apache.commons.chain.Context
	===  UNCHANGED SUPERCLASS: java.lang.Object (<- java.lang.Object)
	===  UNCHANGED FIELD: PUBLIC STATIC FINAL boolean PROCESSING_COMPLETE
	===  UNCHANGED FIELD: PUBLIC STATIC FINAL boolean CONTINUE_PROCESSING
	===  UNCHANGED METHOD: PUBLIC ABSTRACT boolean execute(org.apache.commons.chain.Context)
		===  UNCHANGED EXCEPTION: java.lang.Exception
===* UNCHANGED CLASS: PUBLIC org.apache.commons.chain.config.ConfigParser  (not serializable)
	***! CLASS FILE FORMAT VERSION: 52.0 <- 47.0
	===  UNCHANGED SUPERCLASS: java.lang.Object (<- java.lang.Object)
	===  UNCHANGED CONSTRUCTOR: PUBLIC ConfigParser()
	===  UNCHANGED METHOD: PUBLIC org.apache.commons.digester.Digester getDigester()
	===  UNCHANGED METHOD: PUBLIC org.apache.commons.digester.RuleSet getRuleSet()
	===  UNCHANGED METHOD: PUBLIC boolean getUseContextClassLoader()
	===* UNCHANGED METHOD: PUBLIC void parse(org.apache.commons.chain.Catalog<?>, java.net.URL)
		+++  NEW ANNOTATION: java.lang.Deprecated
		===  UNCHANGED EXCEPTION: java.lang.Exception
	===  UNCHANGED METHOD: PUBLIC void parse(java.net.URL)
		===  UNCHANGED EXCEPTION: java.lang.Exception
	===  UNCHANGED METHOD: PUBLIC void setRuleSet(org.apache.commons.digester.RuleSet)
	===  UNCHANGED METHOD: PUBLIC void setUseContextClassLoader(boolean)
===  UNCHANGED CLASS: PUBLIC org.apache.commons.chain.config.ConfigRuleSet  (not serializable)
	***! CLASS FILE FORMAT VERSION: 52.0 <- 47.0
	===  UNCHANGED INTERFACE: org.apache.commons.digester.RuleSet
	===  UNCHANGED SUPERCLASS: org.apache.commons.digester.RuleSetBase (<- org.apache.commons.digester.RuleSetBase)
	===  UNCHANGED CONSTRUCTOR: PUBLIC ConfigRuleSet()
	===  UNCHANGED METHOD: PUBLIC void addRuleInstances(org.apache.commons.digester.Digester)
	===  UNCHANGED METHOD: PUBLIC java.lang.String getCatalogClass()
	===  UNCHANGED METHOD: PUBLIC java.lang.String getCatalogElement()
	===  UNCHANGED METHOD: PUBLIC java.lang.String getChainClass()
	===  UNCHANGED METHOD: PUBLIC java.lang.String getChainElement()
	===  UNCHANGED METHOD: PUBLIC java.lang.String getClassAttribute()
	===  UNCHANGED METHOD: PUBLIC java.lang.String getCommandElement()
	===  UNCHANGED METHOD: PUBLIC java.lang.String getDefineElement()
	===  UNCHANGED METHOD: PUBLIC java.lang.String getNameAttribute()
	===  UNCHANGED METHOD: PUBLIC void setCatalogClass(java.lang.String)
	===  UNCHANGED METHOD: PUBLIC void setCatalogElement(java.lang.String)
	===  UNCHANGED METHOD: PUBLIC void setChainClass(java.lang.String)
	===  UNCHANGED METHOD: PUBLIC void setChainElement(java.lang.String)
	===  UNCHANGED METHOD: PUBLIC void setClassAttribute(java.lang.String)
	===  UNCHANGED METHOD: PUBLIC void setCommandElement(java.lang.String)
	===  UNCHANGED METHOD: PUBLIC void setDefineElement(java.lang.String)
	===  UNCHANGED METHOD: PUBLIC void setNameAttribute(java.lang.String)
===  UNCHANGED INTERFACE: PUBLIC ABSTRACT org.apache.commons.chain.Context  (not serializable)
	***! CLASS FILE FORMAT VERSION: 52.0 <- 47.0
	===  UNCHANGED INTERFACE: java.util.Map
	===  UNCHANGED SUPERCLASS: java.lang.Object (<- java.lang.Object)
===* UNCHANGED INTERFACE: PUBLIC ABSTRACT org.apache.commons.chain.Filter  (not serializable)
	***! CLASS FILE FORMAT VERSION: 52.0 <- 47.0
	GENERIC TEMPLATES: +++ C:org.apache.commons.chain.Context
	===* UNCHANGED INTERFACE: org.apache.commons.chain.Command
	===  UNCHANGED SUPERCLASS: java.lang.Object (<- java.lang.Object)
	===  UNCHANGED METHOD: PUBLIC ABSTRACT boolean postprocess(org.apache.commons.chain.Context, java.lang.Exception)
===* UNCHANGED CLASS: PUBLIC org.apache.commons.chain.generic.CopyCommand  (not serializable)
	***! CLASS FILE FORMAT VERSION: 52.0 <- 47.0
	GENERIC TEMPLATES: +++ C:org.apache.commons.chain.Context
	===* UNCHANGED INTERFACE: org.apache.commons.chain.Command
	===  UNCHANGED SUPERCLASS: java.lang.Object (<- java.lang.Object)
	===  UNCHANGED CONSTRUCTOR: PUBLIC CopyCommand()
	===  UNCHANGED METHOD: PUBLIC boolean execute(org.apache.commons.chain.Context)
		===  UNCHANGED EXCEPTION: java.lang.Exception
	===  UNCHANGED METHOD: PUBLIC java.lang.String getFromKey()
	===  UNCHANGED METHOD: PUBLIC java.lang.String getToKey()
	===  UNCHANGED METHOD: PUBLIC java.lang.String getValue()
	===  UNCHANGED METHOD: PUBLIC void setFromKey(java.lang.String)
	===  UNCHANGED METHOD: PUBLIC void setToKey(java.lang.String)
	===  UNCHANGED METHOD: PUBLIC void setValue(java.lang.String)
===* UNCHANGED CLASS: PUBLIC ABSTRACT org.apache.commons.chain.generic.DispatchCommand  (not serializable)
	***! CLASS FILE FORMAT VERSION: 52.0 <- 47.0
	GENERIC TEMPLATES: +++ C:org.apache.commons.chain.Context
	===* UNCHANGED INTERFACE: org.apache.commons.chain.Command
	===  UNCHANGED SUPERCLASS: java.lang.Object (<- java.lang.Object)
	===* UNCHANGED FIELD: PROTECTED STATIC FINAL java.lang.Class[]<?> DEFAULT_SIGNATURE
	===  UNCHANGED CONSTRUCTOR: PUBLIC DispatchCommand()
	===  UNCHANGED METHOD: PROTECTED boolean evaluateResult(java.lang.Object)
	===  UNCHANGED METHOD: PUBLIC boolean execute(org.apache.commons.chain.Context)
		===  UNCHANGED EXCEPTION: java.lang.Exception
	===  UNCHANGED METHOD: PROTECTED java.lang.reflect.Method extractMethod(org.apache.commons.chain.Context)
		===  UNCHANGED EXCEPTION: java.lang.NoSuchMethodException
	===  UNCHANGED METHOD: PROTECTED java.lang.Object[] getArguments(org.apache.commons.chain.Context)
	===  UNCHANGED METHOD: PUBLIC java.lang.String getMethod()
	===  UNCHANGED METHOD: PUBLIC java.lang.String getMethodKey()
	===* UNCHANGED METHOD: PROTECTED java.lang.Class[]<?> getSignature()
	===  UNCHANGED METHOD: PUBLIC void setMethod(java.lang.String)
	===  UNCHANGED METHOD: PUBLIC void setMethodKey(java.lang.String)
===* UNCHANGED CLASS: PUBLIC org.apache.commons.chain.generic.DispatchLookupCommand  (not serializable)
	***! CLASS FILE FORMAT VERSION: 52.0 <- 47.0
	GENERIC TEMPLATES: +++ C:org.apache.commons.chain.Context
	===* UNCHANGED INTERFACE: org.apache.commons.chain.Command
	===* UNCHANGED INTERFACE: org.apache.commons.chain.Filter
	===  UNCHANGED SUPERCLASS: org.apache.commons.chain.generic.LookupCommand (<- org.apache.commons.chain.generic.LookupCommand)
	===* UNCHANGED CONSTRUCTOR: PUBLIC DispatchLookupCommand(org.apache.commons.chain.CatalogFactory<C>)
	===  UNCHANGED CONSTRUCTOR: PUBLIC DispatchLookupCommand()
	===  UNCHANGED METHOD: PUBLIC boolean execute(org.apache.commons.chain.Context)
		===  UNCHANGED EXCEPTION: java.lang.Exception
	===  UNCHANGED METHOD: PROTECTED java.lang.Object[] getArguments(org.apache.commons.chain.Context)
	===  UNCHANGED METHOD: PUBLIC java.lang.String getMethod()
	===  UNCHANGED METHOD: PUBLIC java.lang.String getMethodKey()
	===* UNCHANGED METHOD: PROTECTED java.lang.Class[]<?> getSignature()
	===  UNCHANGED METHOD: PUBLIC void setMethod(java.lang.String)
	===  UNCHANGED METHOD: PUBLIC void setMethodKey(java.lang.String)
===* UNCHANGED CLASS: PUBLIC org.apache.commons.chain.generic.LookupCommand  (not serializable)
	***! CLASS FILE FORMAT VERSION: 52.0 <- 47.0
	GENERIC TEMPLATES: +++ C:org.apache.commons.chain.Context
	===* UNCHANGED INTERFACE: org.apache.commons.chain.Command
	===* UNCHANGED INTERFACE: org.apache.commons.chain.Filter
	===  UNCHANGED SUPERCLASS: java.lang.Object (<- java.lang.Object)
	===* UNCHANGED CONSTRUCTOR: PUBLIC LookupCommand(org.apache.commons.chain.CatalogFactory<C>)
	===  UNCHANGED CONSTRUCTOR: PUBLIC LookupCommand()
	===  UNCHANGED METHOD: PUBLIC boolean execute(org.apache.commons.chain.Context)
		===  UNCHANGED EXCEPTION: java.lang.Exception
	===* UNCHANGED METHOD: PROTECTED org.apache.commons.chain.Catalog<C> getCatalog(org.apache.commons.chain.Context)
	===* UNCHANGED METHOD: PUBLIC org.apache.commons.chain.CatalogFactory<C> getCatalogFactory()
	===  UNCHANGED METHOD: PUBLIC java.lang.String getCatalogName()
	===* UNCHANGED METHOD: PROTECTED org.apache.commons.chain.Command<C> getCommand(org.apache.commons.chain.Context)
	===  UNCHANGED METHOD: PROTECTED java.lang.String getCommandName(org.apache.commons.chain.Context)
	===  UNCHANGED METHOD: PUBLIC java.lang.String getName()
	===  UNCHANGED METHOD: PUBLIC java.lang.String getNameKey()
	===  UNCHANGED METHOD: PUBLIC boolean isIgnoreExecuteResult()
	===  UNCHANGED METHOD: PUBLIC boolean isIgnorePostprocessResult()
	===  UNCHANGED METHOD: PUBLIC boolean isOptional()
	===  UNCHANGED METHOD: PUBLIC boolean postprocess(org.apache.commons.chain.Context, java.lang.Exception)
	===* UNCHANGED METHOD: PUBLIC void setCatalogFactory(org.apache.commons.chain.CatalogFactory<C>)
	===  UNCHANGED METHOD: PUBLIC void setCatalogName(java.lang.String)
	===  UNCHANGED METHOD: PUBLIC void setIgnoreExecuteResult(boolean)
	===  UNCHANGED METHOD: PUBLIC void setIgnorePostprocessResult(boolean)
	===  UNCHANGED METHOD: PUBLIC void setName(java.lang.String)
	===  UNCHANGED METHOD: PUBLIC void setNameKey(java.lang.String)
	===  UNCHANGED METHOD: PUBLIC void setOptional(boolean)
===* UNCHANGED CLASS: PUBLIC org.apache.commons.chain.generic.RemoveCommand  (not serializable)
	***! CLASS FILE FORMAT VERSION: 52.0 <- 47.0
	GENERIC TEMPLATES: +++ C:org.apache.commons.chain.Context
	===* UNCHANGED INTERFACE: org.apache.commons.chain.Command
	===  UNCHANGED SUPERCLASS: java.lang.Object (<- java.lang.Object)
	===  UNCHANGED CONSTRUCTOR: PUBLIC RemoveCommand()
	===  UNCHANGED METHOD: PUBLIC boolean execute(org.apache.commons.chain.Context)
		===  UNCHANGED EXCEPTION: java.lang.Exception
	===  UNCHANGED METHOD: PUBLIC java.lang.String getFromKey()
	===  UNCHANGED METHOD: PUBLIC void setFromKey(java.lang.String)
***! MODIFIED CLASS: PUBLIC org.apache.commons.chain.impl.CatalogBase  (not serializable)
	***! CLASS FILE FORMAT VERSION: 52.0 <- 47.0
	GENERIC TEMPLATES: +++ C:org.apache.commons.chain.Context
	===* UNCHANGED INTERFACE: org.apache.commons.chain.Catalog
	===  UNCHANGED SUPERCLASS: java.lang.Object (<- java.lang.Object)
	***! MODIFIED FIELD: PRIVATE (<- PROTECTED) FINAL (<- NON_FINAL) java.util.Map<java.lang.String,org.apache.commons.chain.Command<C>> commands
	===  UNCHANGED CONSTRUCTOR: PUBLIC CatalogBase()
	===* UNCHANGED CONSTRUCTOR: PUBLIC CatalogBase(java.util.Map<java.lang.String,org.apache.commons.chain.Command<C>>)
	===* UNCHANGED METHOD: PUBLIC void addCommand(java.lang.String, org.apache.commons.chain.Command<C>)
		GENERIC TEMPLATES: +++ CMD:org.apache.commons.chain.Command<C>
	===* UNCHANGED METHOD: PUBLIC org.apache.commons.chain.Command getCommand(java.lang.String)
		GENERIC TEMPLATES: +++ CMD:org.apache.commons.chain.Command<C>
	===* UNCHANGED METHOD: PUBLIC java.util.Iterator<java.lang.String> getNames()
	===  UNCHANGED METHOD: PUBLIC java.lang.String toString()
===* UNCHANGED CLASS: PUBLIC org.apache.commons.chain.impl.CatalogFactoryBase  (not serializable)
	***! CLASS FILE FORMAT VERSION: 52.0 <- 47.0
	GENERIC TEMPLATES: +++ C:org.apache.commons.chain.Context
	===  UNCHANGED SUPERCLASS: org.apache.commons.chain.CatalogFactory (<- org.apache.commons.chain.CatalogFactory)
	===  UNCHANGED CONSTRUCTOR: PUBLIC CatalogFactoryBase()
	===* UNCHANGED METHOD: PUBLIC void addCatalog(java.lang.String, org.apache.commons.chain.Catalog<C>)
	===* UNCHANGED METHOD: PUBLIC org.apache.commons.chain.Catalog<C> getCatalog()
	===* UNCHANGED METHOD: PUBLIC org.apache.commons.chain.Catalog<C> getCatalog(java.lang.String)
	===* UNCHANGED METHOD: PUBLIC java.util.Iterator<java.lang.String> getNames()
	===* UNCHANGED METHOD: PUBLIC void setCatalog(org.apache.commons.chain.Catalog<C>)
***! MODIFIED CLASS: PUBLIC org.apache.commons.chain.impl.ChainBase  (not serializable)
	***! CLASS FILE FORMAT VERSION: 52.0 <- 47.0
	GENERIC TEMPLATES: +++ C:org.apache.commons.chain.Context
	===* UNCHANGED INTERFACE: org.apache.commons.chain.Command
	===* UNCHANGED INTERFACE: org.apache.commons.chain.Chain
	===  UNCHANGED SUPERCLASS: java.lang.Object (<- java.lang.Object)
	***! MODIFIED FIELD: PRIVATE (<- PROTECTED) boolean frozen
	***! MODIFIED FIELD: PRIVATE (<- PROTECTED) org.apache.commons.chain.Command[]<C> commands
	===* UNCHANGED CONSTRUCTOR: PUBLIC ChainBase(org.apache.commons.chain.Command[]<C>)
	===* UNCHANGED CONSTRUCTOR: PUBLIC ChainBase(java.util.Collection<org.apache.commons.chain.Command<C>>)
	===* UNCHANGED CONSTRUCTOR: PUBLIC ChainBase(org.apache.commons.chain.Command<C>)
	===  UNCHANGED CONSTRUCTOR: PUBLIC ChainBase()
	===* UNCHANGED METHOD: PUBLIC void addCommand(org.apache.commons.chain.Command<C>)
		GENERIC TEMPLATES: +++ CMD:org.apache.commons.chain.Command<C>
	===  UNCHANGED METHOD: PUBLIC boolean execute(org.apache.commons.chain.Context)
		===  UNCHANGED EXCEPTION: java.lang.Exception
	+++  NEW METHOD: PUBLIC(+) boolean isFrozen()
**** MODIFIED CLASS: PUBLIC org.apache.commons.chain.impl.ContextBase  (compatible)
	***! CLASS FILE FORMAT VERSION: 52.0 <- 47.0
	===  UNCHANGED INTERFACE: java.lang.Cloneable
	===  UNCHANGED INTERFACE: java.util.Map
	===  UNCHANGED INTERFACE: org.apache.commons.chain.Context
	===  UNCHANGED INTERFACE: java.io.Serializable
	===  UNCHANGED SUPERCLASS: java.util.HashMap (<- java.util.HashMap)
	===  UNCHANGED CONSTRUCTOR: PUBLIC ContextBase()
	===* UNCHANGED CONSTRUCTOR: PUBLIC ContextBase(java.util.Map<java.lang.String,java.lang.Object>)
	===  UNCHANGED METHOD: PUBLIC void clear()
	===  UNCHANGED METHOD: PUBLIC boolean containsValue(java.lang.Object)
	===* UNCHANGED METHOD: PUBLIC java.util.Set<java.util.Map$Entry<java.lang.String,java.lang.Object>> entrySet()
	===  UNCHANGED METHOD: PUBLIC java.lang.Object get(java.lang.Object)
	===  UNCHANGED METHOD: PUBLIC boolean isEmpty()
	===* UNCHANGED METHOD: PUBLIC java.util.Set<java.lang.String> keySet()
	===  UNCHANGED METHOD: PUBLIC SYNTHETIC (<- NON_SYNTHETIC) BRIDGE (<- NON_BRIDGE) java.lang.Object put(java.lang.Object, java.lang.Object)
	+++  NEW METHOD: PUBLIC(+) java.lang.Object put(java.lang.String, java.lang.Object)
	===* UNCHANGED METHOD: PUBLIC void putAll(java.util.Map<? extends java.lang.String,? extends java.lang.Object>)
	===  UNCHANGED METHOD: PUBLIC java.lang.Object remove(java.lang.Object)
	===* UNCHANGED METHOD: PUBLIC java.util.Collection<java.lang.Object> values()
+++  NEW CLASS: PUBLIC(+) ABSTRACT(+) org.apache.commons.chain.internal.AbstractSessionScopeMap  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 52.0 <- n.a.
	GENERIC TEMPLATES: +++ R:java.lang.Object, +++ S:java.lang.Object
	+++  NEW INTERFACE: java.util.Map
	+++  NEW SUPERCLASS: java.lang.Object
	+++  NEW CONSTRUCTOR: PUBLIC(+) AbstractSessionScopeMap(java.lang.Object)
	+++  NEW METHOD: PUBLIC(+) void clear()
	+++  NEW METHOD: PUBLIC(+) boolean containsKey(java.lang.Object)
	+++  NEW METHOD: PUBLIC(+) boolean containsValue(java.lang.Object)
	+++  NEW METHOD: PROTECTED(+) ABSTRACT(+) org.apache.commons.chain.internal.MutableParameterMap<S,java.lang.Object> createParameterMap()
	+++  NEW METHOD: PUBLIC(+) java.util.Set<java.util.Map$Entry<java.lang.String,java.lang.Object>> entrySet()
	+++  NEW METHOD: PUBLIC(+) boolean equals(java.lang.Object)
	+++  NEW METHOD: PUBLIC(+) java.lang.Object get(java.lang.Object)
	+++  NEW METHOD: PROTECTED(+) java.lang.Object getRequest()
	+++  NEW METHOD: PROTECTED(+) java.lang.Object getSession()
	+++  NEW METHOD: PROTECTED(+) ABSTRACT(+) java.lang.Object getSession(boolean)
	+++  NEW METHOD: PUBLIC(+) int hashCode()
	+++  NEW METHOD: PUBLIC(+) boolean isEmpty()
	+++  NEW METHOD: PUBLIC(+) java.util.Set<java.lang.String> keySet()
	+++  NEW METHOD: PUBLIC(+) java.lang.Object put(java.lang.String, java.lang.Object)
	+++  NEW METHOD: PUBLIC(+) void putAll(java.util.Map<? extends java.lang.String,? extends java.lang.Object>)
	+++  NEW METHOD: PUBLIC(+) java.lang.Object remove(java.lang.Object)
	+++  NEW METHOD: PROTECTED(+) boolean sessionExists()
	+++  NEW METHOD: PROTECTED(+) boolean sessionExists(boolean)
	+++  NEW METHOD: PUBLIC(+) int size()
	+++  NEW METHOD: PUBLIC(+) java.lang.String toString()
	+++  NEW METHOD: PUBLIC(+) java.util.Collection<java.lang.Object> values()
+++  NEW INTERFACE: PUBLIC(+) ABSTRACT(+) org.apache.commons.chain.internal.CheckedConsumer  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 52.0 <- n.a.
	GENERIC TEMPLATES: +++ E:java.lang.Throwable, +++ T:java.lang.Object
	+++  NEW SUPERCLASS: java.lang.Object
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) void accept(java.lang.Object)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW METHOD: PUBLIC(+) org.apache.commons.chain.internal.CheckedConsumer andThen(org.apache.commons.chain.internal.CheckedConsumer<? super T,E>)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++  NEW ANNOTATION: java.lang.FunctionalInterface
+++* NEW INTERFACE: PUBLIC(+) ABSTRACT(+) org.apache.commons.chain.internal.CheckedFunction  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 52.0 <- n.a.
	GENERIC TEMPLATES: +++ E:java.lang.Throwable, +++ R:java.lang.Object, +++ T:java.lang.Object
	+++  NEW SUPERCLASS: java.lang.Object
	+++* NEW METHOD: PUBLIC(+) org.apache.commons.chain.internal.CheckedFunction<T,V,E> andThen(org.apache.commons.chain.internal.CheckedFunction<? super R,? extends V,E>)
		GENERIC TEMPLATES: +++ V:java.lang.Object
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) java.lang.Object apply(java.lang.Object)
		+++  NEW EXCEPTION: java.lang.Throwable
	+++* NEW METHOD: PUBLIC(+) org.apache.commons.chain.internal.CheckedFunction<V,R,E> compose(org.apache.commons.chain.internal.CheckedFunction<? super V,? extends T,E>)
		GENERIC TEMPLATES: +++ V:java.lang.Object
	+++* NEW METHOD: PUBLIC(+) STATIC(+) org.apache.commons.chain.internal.CheckedFunction<T,T,E> identity()
		GENERIC TEMPLATES: +++ E:java.lang.Throwable, +++ T:java.lang.Object
	+++  NEW ANNOTATION: java.lang.FunctionalInterface
+++  NEW CLASS: PUBLIC(+) org.apache.commons.chain.internal.CookieMap  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 52.0 <- n.a.
	GENERIC TEMPLATES: +++ P:java.lang.Object
	+++  NEW INTERFACE: java.util.Map
	+++  NEW SUPERCLASS: org.apache.commons.chain.internal.ParameterMap
	+++  NEW CONSTRUCTOR: PUBLIC(+) CookieMap(java.lang.Object, java.util.function.Supplier<javax.servlet.http.Cookie[]>)
	+++  NEW METHOD: PUBLIC(+) boolean containsKey(java.lang.Object)
	+++  NEW METHOD: PUBLIC(+) boolean containsValue(java.lang.Object)
	+++  NEW METHOD: PUBLIC(+) java.util.Set<java.util.Map$Entry<java.lang.String,javax.servlet.http.Cookie>> entrySet()
	+++  NEW METHOD: PUBLIC(+) boolean equals(java.lang.Object)
	+++  NEW METHOD: PUBLIC(+) javax.servlet.http.Cookie get(java.lang.Object)
	+++  NEW METHOD: PUBLIC(+) int hashCode()
	+++  NEW METHOD: PUBLIC(+) boolean isEmpty()
	+++  NEW METHOD: PUBLIC(+) java.util.Set<java.lang.String> keySet()
	+++  NEW METHOD: PUBLIC(+) int size()
	+++  NEW METHOD: PUBLIC(+) java.util.Collection<javax.servlet.http.Cookie> values()
+++  NEW CLASS: PUBLIC(+) org.apache.commons.chain.internal.MutableParameterMap  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 52.0 <- n.a.
	GENERIC TEMPLATES: +++ P:java.lang.Object, +++ T:java.lang.Object
	+++  NEW INTERFACE: java.util.Map
	+++  NEW SUPERCLASS: org.apache.commons.chain.internal.ParameterMap
	+++  NEW CONSTRUCTOR: PUBLIC(+) MutableParameterMap(java.lang.Object, java.util.function.Function<java.lang.String,T>, java.util.function.Supplier<java.util.Enumeration<java.lang.String>>, java.util.function.Consumer<java.lang.String>, java.util.function.BiConsumer<java.lang.String,T>)
	+++  NEW METHOD: PUBLIC(+) void clear()
	+++  NEW METHOD: PUBLIC(+) boolean containsValue(java.lang.Object)
	+++  NEW METHOD: PUBLIC(+) java.util.Set<java.util.Map$Entry<java.lang.String,T>> entrySet()
	+++  NEW METHOD: PUBLIC(+) boolean equals(java.lang.Object)
	+++  NEW METHOD: PUBLIC(+) int hashCode()
	+++  NEW METHOD: PUBLIC(+) java.lang.Object put(java.lang.String, java.lang.Object)
	+++  NEW METHOD: PUBLIC(+) void putAll(java.util.Map<? extends java.lang.String,? extends T>)
	+++  NEW METHOD: PUBLIC(+) java.lang.Object remove(java.lang.Object)
+++  NEW CLASS: PUBLIC(+) org.apache.commons.chain.internal.ParameterMap  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 52.0 <- n.a.
	GENERIC TEMPLATES: +++ P:java.lang.Object, +++ T:java.lang.Object
	+++  NEW INTERFACE: java.util.Map
	+++  NEW SUPERCLASS: java.lang.Object
	+++  NEW CONSTRUCTOR: PUBLIC(+) ParameterMap(java.lang.Object, java.util.function.Function<java.lang.String,T>, java.util.function.Supplier<java.util.Enumeration<java.lang.String>>)
	+++  NEW METHOD: PUBLIC(+) void clear()
	+++  NEW METHOD: PUBLIC(+) boolean containsKey(java.lang.Object)
	+++  NEW METHOD: PUBLIC(+) boolean containsValue(java.lang.Object)
	+++  NEW METHOD: PUBLIC(+) java.util.Set<java.util.Map$Entry<java.lang.String,T>> entrySet()
	+++  NEW METHOD: PROTECTED(+) java.util.Set<java.util.Map$Entry<java.lang.String,T>> entrySet(boolean)
	+++  NEW METHOD: PUBLIC(+) boolean equals(java.lang.Object)
	+++  NEW METHOD: PUBLIC(+) java.lang.Object get(java.lang.Object)
	+++  NEW METHOD: PROTECTED(+) java.util.function.Supplier<java.util.Enumeration<java.lang.String>> getNamesSupplier()
	+++  NEW METHOD: PROTECTED(+) java.lang.Object getParameter()
	+++  NEW METHOD: PROTECTED(+) java.util.function.Function<java.lang.String,T> getValueFunction()
	+++  NEW METHOD: PUBLIC(+) int hashCode()
	+++  NEW METHOD: PUBLIC(+) boolean isEmpty()
	+++  NEW METHOD: PROTECTED(+) STATIC(+) java.lang.String key(java.lang.Object)
	+++  NEW METHOD: PUBLIC(+) java.util.Set<java.lang.String> keySet()
	+++  NEW METHOD: PUBLIC(+) java.lang.Object put(java.lang.String, java.lang.Object)
	+++  NEW METHOD: PUBLIC(+) void putAll(java.util.Map<? extends java.lang.String,? extends T>)
	+++  NEW METHOD: PUBLIC(+) java.lang.Object remove(java.lang.Object)
	+++  NEW METHOD: PUBLIC(+) int size()
	+++  NEW METHOD: PUBLIC(+) java.lang.String toString()
	+++  NEW METHOD: PUBLIC(+) java.util.Collection<T> values()
+++  NEW CLASS: PUBLIC(+) org.apache.commons.chain.internal.ParamValuesMap  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 52.0 <- n.a.
	GENERIC TEMPLATES: +++ P:java.lang.Object
	+++  NEW INTERFACE: java.util.Map
	+++  NEW SUPERCLASS: org.apache.commons.chain.internal.ParameterMap
	+++  NEW CONSTRUCTOR: PUBLIC(+) ParamValuesMap(java.lang.Object, java.util.function.Function<java.lang.String,java.lang.String[]>, java.util.function.Supplier<java.util.Enumeration<java.lang.String>>)
	+++  NEW METHOD: PUBLIC(+) boolean containsValue(java.lang.Object)
+++* NEW CLASS: PUBLIC(+) FINAL(+) org.apache.commons.chain.internal.Utilities  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 52.0 <- n.a.
	+++  NEW SUPERCLASS: java.lang.Object
	+++* NEW METHOD: PUBLIC(+) STATIC(+) java.lang.Object[] newArray(java.lang.Class<?>, int)
		GENERIC TEMPLATES: +++ T:java.lang.Object
---! REMOVED CLASS: PUBLIC(-) ABSTRACT(-) org.apache.commons.chain.web.AbstractGetLocaleCommand  (not serializable)
	---  CLASS FILE FORMAT VERSION: n.a. <- 47.0
	---! REMOVED INTERFACE: org.apache.commons.chain.Command
	---! REMOVED SUPERCLASS: java.lang.Object
	---! REMOVED CONSTRUCTOR: PUBLIC(-) AbstractGetLocaleCommand()
	---  REMOVED METHOD: PUBLIC(-) boolean execute(org.apache.commons.chain.Context)
		---  REMOVED EXCEPTION: java.lang.Exception
	---! REMOVED METHOD: PROTECTED(-) ABSTRACT(-) java.util.Locale getLocale(org.apache.commons.chain.Context)
	---! REMOVED METHOD: PUBLIC(-) java.lang.String getLocaleKey()
	---! REMOVED METHOD: PUBLIC(-) void setLocaleKey(java.lang.String)
---! REMOVED CLASS: PUBLIC(-) ABSTRACT(-) org.apache.commons.chain.web.AbstractSetLocaleCommand  (not serializable)
	---  CLASS FILE FORMAT VERSION: n.a. <- 47.0
	---! REMOVED INTERFACE: org.apache.commons.chain.Command
	---! REMOVED SUPERCLASS: java.lang.Object
	---! REMOVED CONSTRUCTOR: PUBLIC(-) AbstractSetLocaleCommand()
	---  REMOVED METHOD: PUBLIC(-) boolean execute(org.apache.commons.chain.Context)
		---  REMOVED EXCEPTION: java.lang.Exception
	---! REMOVED METHOD: PUBLIC(-) java.lang.String getLocaleKey()
	---! REMOVED METHOD: PROTECTED(-) ABSTRACT(-) void setLocale(org.apache.commons.chain.Context, java.util.Locale)
	---! REMOVED METHOD: PUBLIC(-) void setLocaleKey(java.lang.String)
===  UNCHANGED CLASS: PUBLIC org.apache.commons.chain.web.ChainListener  (not serializable)
	***! CLASS FILE FORMAT VERSION: 52.0 <- 47.0
	===  UNCHANGED INTERFACE: java.util.EventListener
	===  UNCHANGED INTERFACE: javax.servlet.ServletContextListener
	===  UNCHANGED SUPERCLASS: java.lang.Object (<- java.lang.Object)
	===  UNCHANGED FIELD: PUBLIC STATIC FINAL java.lang.String CONFIG_CLASS_RESOURCE
	===  UNCHANGED FIELD: PUBLIC STATIC FINAL java.lang.String RULE_SET
	===  UNCHANGED FIELD: PUBLIC STATIC FINAL java.lang.String CONFIG_ATTR
	===  UNCHANGED FIELD: PUBLIC STATIC FINAL java.lang.String CONFIG_WEB_RESOURCE
	===  UNCHANGED CONSTRUCTOR: PUBLIC ChainListener()
	===  UNCHANGED METHOD: PUBLIC void contextDestroyed(javax.servlet.ServletContextEvent)
	===  UNCHANGED METHOD: PUBLIC void contextInitialized(javax.servlet.ServletContextEvent)
===  UNCHANGED CLASS: PUBLIC org.apache.commons.chain.web.ChainServlet  (compatible)
	***! CLASS FILE FORMAT VERSION: 52.0 <- 47.0
	===  UNCHANGED INTERFACE: javax.servlet.ServletConfig
	===  UNCHANGED INTERFACE: javax.servlet.Servlet
	===  UNCHANGED INTERFACE: java.io.Serializable
	===  UNCHANGED SUPERCLASS: javax.servlet.http.HttpServlet (<- javax.servlet.http.HttpServlet)
	===  UNCHANGED FIELD: PUBLIC STATIC FINAL java.lang.String CONFIG_CLASS_RESOURCE
	===  UNCHANGED FIELD: PUBLIC STATIC FINAL java.lang.String RULE_SET
	===  UNCHANGED FIELD: PUBLIC STATIC FINAL java.lang.String CONFIG_ATTR
	===  UNCHANGED FIELD: PUBLIC STATIC FINAL java.lang.String CONFIG_WEB_RESOURCE
	===  UNCHANGED CONSTRUCTOR: PUBLIC ChainServlet()
	===  UNCHANGED METHOD: PUBLIC void destroy()
	===  UNCHANGED METHOD: PUBLIC void init()
		===  UNCHANGED EXCEPTION: javax.servlet.ServletException
	===  UNCHANGED METHOD: PUBLIC void service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
		===  UNCHANGED EXCEPTION: javax.servlet.ServletException
		===  UNCHANGED EXCEPTION: java.io.IOException
***! MODIFIED CLASS: PUBLIC org.apache.commons.chain.web.faces.FacesGetLocaleCommand  (not serializable)
	***! CLASS FILE FORMAT VERSION: 52.0 <- 47.0
	===* UNCHANGED INTERFACE: org.apache.commons.chain.Command
	***! MODIFIED SUPERCLASS: org.apache.commons.chain.web.GetLocaleCommand (<- org.apache.commons.chain.web.AbstractGetLocaleCommand)
	===  UNCHANGED CONSTRUCTOR: PUBLIC FacesGetLocaleCommand()
	---! REMOVED METHOD: PROTECTED(-) java.util.Locale getLocale(org.apache.commons.chain.Context)
***! MODIFIED CLASS: PUBLIC org.apache.commons.chain.web.faces.FacesSetLocaleCommand  (not serializable)
	***! CLASS FILE FORMAT VERSION: 52.0 <- 47.0
	===* UNCHANGED INTERFACE: org.apache.commons.chain.Command
	***! MODIFIED SUPERCLASS: org.apache.commons.chain.web.SetLocaleCommand (<- org.apache.commons.chain.web.AbstractSetLocaleCommand)
	===  UNCHANGED CONSTRUCTOR: PUBLIC FacesSetLocaleCommand()
	---! REMOVED METHOD: PROTECTED(-) void setLocale(org.apache.commons.chain.Context, java.util.Locale)
===* UNCHANGED CLASS: PUBLIC org.apache.commons.chain.web.faces.FacesWebContext  (compatible)
	***! CLASS FILE FORMAT VERSION: 52.0 <- 47.0
	===  UNCHANGED INTERFACE: java.lang.Cloneable
	===  UNCHANGED INTERFACE: java.util.Map
	===  UNCHANGED INTERFACE: org.apache.commons.chain.Context
	===  UNCHANGED INTERFACE: java.io.Serializable
	===  UNCHANGED SUPERCLASS: org.apache.commons.chain.web.WebContext (<- org.apache.commons.chain.web.WebContext)
	===  UNCHANGED CONSTRUCTOR: PUBLIC FacesWebContext()
	===  UNCHANGED CONSTRUCTOR: PUBLIC FacesWebContext(javax.faces.context.FacesContext)
	===* UNCHANGED METHOD: PUBLIC java.util.Map<java.lang.String,java.lang.Object> getApplicationScope()
	===  UNCHANGED METHOD: PUBLIC javax.faces.context.FacesContext getContext()
	===* UNCHANGED METHOD: PUBLIC java.util.Map<java.lang.String,javax.servlet.http.Cookie> getCookies()
	===* UNCHANGED METHOD: PUBLIC java.util.Map<java.lang.String,java.lang.String> getHeader()
	===* UNCHANGED METHOD: PUBLIC java.util.Map<java.lang.String,java.lang.String[]> getHeaderValues()
	===* UNCHANGED METHOD: PUBLIC java.util.Map<java.lang.String,java.lang.String> getInitParam()
	===* UNCHANGED METHOD: PUBLIC java.util.Map<java.lang.String,java.lang.String> getParam()
	===* UNCHANGED METHOD: PUBLIC java.util.Map<java.lang.String,java.lang.String[]> getParamValues()
	===* UNCHANGED METHOD: PUBLIC java.util.Map<java.lang.String,java.lang.Object> getRequestScope()
	===* UNCHANGED METHOD: PUBLIC java.util.Map<java.lang.String,java.lang.Object> getSessionScope()
	===  UNCHANGED METHOD: PUBLIC void initialize(javax.faces.context.FacesContext)
	===  UNCHANGED METHOD: PUBLIC void release()
+++  NEW CLASS: PUBLIC(+) org.apache.commons.chain.web.GetLocaleCommand  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 52.0 <- n.a.
	GENERIC TEMPLATES: +++ C:org.apache.commons.chain.web.WebContext
	+++  NEW INTERFACE: org.apache.commons.chain.Command
	+++  NEW SUPERCLASS: java.lang.Object
	+++  NEW CONSTRUCTOR: PUBLIC(+) GetLocaleCommand(java.util.function.Function<C,java.util.Locale>)
	+++  NEW METHOD: PUBLIC(+) boolean execute(org.apache.commons.chain.web.WebContext)
		+++  NEW EXCEPTION: java.lang.Exception
	+++  NEW METHOD: PUBLIC(+) java.lang.String getLocaleKey()
	+++  NEW METHOD: PUBLIC(+) void setLocaleKey(java.lang.String)
***! MODIFIED CLASS: PUBLIC org.apache.commons.chain.web.MapEntry  (not serializable)
	***! CLASS FILE FORMAT VERSION: 52.0 <- 47.0
	GENERIC TEMPLATES: +++ T:java.lang.Object
	===  UNCHANGED INTERFACE: java.util.Map$Entry
	===  UNCHANGED SUPERCLASS: java.lang.Object (<- java.lang.Object)
	---! REMOVED CONSTRUCTOR: PUBLIC(-) MapEntry(java.lang.Object, java.lang.Object, boolean)
	+++  NEW CONSTRUCTOR: PUBLIC(+) MapEntry(java.lang.String, java.lang.Object, boolean)
	===  UNCHANGED METHOD: PUBLIC boolean equals(java.lang.Object)
	===  UNCHANGED METHOD: PUBLIC SYNTHETIC (<- NON_SYNTHETIC) BRIDGE (<- NON_BRIDGE) java.lang.Object getKey()
	===  UNCHANGED METHOD: PUBLIC java.lang.Object getValue()
	===  UNCHANGED METHOD: PUBLIC int hashCode()
	===  UNCHANGED METHOD: PUBLIC java.lang.Object setValue(java.lang.Object)
***! MODIFIED CLASS: PUBLIC org.apache.commons.chain.web.portlet.PortletGetLocaleCommand  (not serializable)
	***! CLASS FILE FORMAT VERSION: 52.0 <- 47.0
	===* UNCHANGED INTERFACE: org.apache.commons.chain.Command
	***! MODIFIED SUPERCLASS: org.apache.commons.chain.web.GetLocaleCommand (<- org.apache.commons.chain.web.AbstractGetLocaleCommand)
	===  UNCHANGED CONSTRUCTOR: PUBLIC PortletGetLocaleCommand()
	---! REMOVED METHOD: PROTECTED(-) java.util.Locale getLocale(org.apache.commons.chain.Context)
***! MODIFIED CLASS: PUBLIC org.apache.commons.chain.web.portlet.PortletSetLocaleCommand  (not serializable)
	***! CLASS FILE FORMAT VERSION: 52.0 <- 47.0
	===* UNCHANGED INTERFACE: org.apache.commons.chain.Command
	***! MODIFIED SUPERCLASS: org.apache.commons.chain.web.SetLocaleCommand (<- org.apache.commons.chain.web.AbstractSetLocaleCommand)
	===  UNCHANGED CONSTRUCTOR: PUBLIC PortletSetLocaleCommand()
	---! REMOVED METHOD: PROTECTED(-) void setLocale(org.apache.commons.chain.Context, java.util.Locale)
***! MODIFIED CLASS: PUBLIC org.apache.commons.chain.web.portlet.PortletWebContext  (field changed from nontransient to transient)
	***! CLASS FILE FORMAT VERSION: 52.0 <- 47.0
	===  UNCHANGED INTERFACE: java.lang.Cloneable
	===  UNCHANGED INTERFACE: java.util.Map
	===  UNCHANGED INTERFACE: org.apache.commons.chain.Context
	===  UNCHANGED INTERFACE: java.io.Serializable
	===  UNCHANGED SUPERCLASS: org.apache.commons.chain.web.WebContext (<- org.apache.commons.chain.web.WebContext)
	***! MODIFIED FIELD: PRIVATE (<- PROTECTED) javax.portlet.PortletRequest request
	***! MODIFIED FIELD: PRIVATE (<- PROTECTED) javax.portlet.PortletResponse response
	***! MODIFIED FIELD: PRIVATE (<- PROTECTED) javax.portlet.PortletContext context
	===  UNCHANGED CONSTRUCTOR: PUBLIC PortletWebContext(javax.portlet.PortletContext, javax.portlet.PortletRequest, javax.portlet.PortletResponse)
	===  UNCHANGED CONSTRUCTOR: PUBLIC PortletWebContext()
	===* UNCHANGED METHOD: PUBLIC java.util.Map<java.lang.String,java.lang.Object> getApplicationScope()
	===  UNCHANGED METHOD: PUBLIC javax.portlet.PortletContext getContext()
	===* UNCHANGED METHOD: PUBLIC java.util.Map<java.lang.String,javax.servlet.http.Cookie> getCookies()
	===* UNCHANGED METHOD: PUBLIC java.util.Map<java.lang.String,java.lang.String> getHeader()
	===* UNCHANGED METHOD: PUBLIC java.util.Map<java.lang.String,java.lang.String[]> getHeaderValues()
	===* UNCHANGED METHOD: PUBLIC java.util.Map<java.lang.String,java.lang.String> getInitParam()
	===* UNCHANGED METHOD: PUBLIC java.util.Map<java.lang.String,java.lang.String> getParam()
	===* UNCHANGED METHOD: PUBLIC java.util.Map<java.lang.String,java.lang.String[]> getParamValues()
	===  UNCHANGED METHOD: PUBLIC javax.portlet.PortletRequest getRequest()
	===* UNCHANGED METHOD: PUBLIC java.util.Map<java.lang.String,java.lang.Object> getRequestScope()
	===  UNCHANGED METHOD: PUBLIC javax.portlet.PortletResponse getResponse()
	===* UNCHANGED METHOD: PUBLIC java.util.Map<java.lang.String,java.lang.Object> getSessionScope()
	===  UNCHANGED METHOD: PUBLIC void initialize(javax.portlet.PortletContext, javax.portlet.PortletRequest, javax.portlet.PortletResponse)
	===  UNCHANGED METHOD: PUBLIC void release()
===  UNCHANGED CLASS: PUBLIC org.apache.commons.chain.web.servlet.ChainProcessor  (compatible)
	***! CLASS FILE FORMAT VERSION: 52.0 <- 47.0
	===  UNCHANGED INTERFACE: javax.servlet.ServletConfig
	===  UNCHANGED INTERFACE: javax.servlet.Servlet
	===  UNCHANGED INTERFACE: java.io.Serializable
	===  UNCHANGED SUPERCLASS: org.apache.commons.chain.web.ChainServlet (<- org.apache.commons.chain.web.ChainServlet)
	===  UNCHANGED FIELD: PUBLIC STATIC FINAL java.lang.String CATALOG
	===  UNCHANGED FIELD: PUBLIC STATIC FINAL java.lang.String CATALOG_DEFAULT
	===  UNCHANGED FIELD: PUBLIC STATIC FINAL java.lang.String COMMAND
	===  UNCHANGED CONSTRUCTOR: PUBLIC ChainProcessor()
	===  UNCHANGED METHOD: PUBLIC void destroy()
	===  UNCHANGED METHOD: PUBLIC void init()
		===  UNCHANGED EXCEPTION: javax.servlet.ServletException
	===  UNCHANGED METHOD: PUBLIC void service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
		===  UNCHANGED EXCEPTION: java.io.IOException
		===  UNCHANGED EXCEPTION: javax.servlet.ServletException
***  MODIFIED CLASS: PUBLIC org.apache.commons.chain.web.servlet.PathInfoMapper  (not serializable)
	***! CLASS FILE FORMAT VERSION: 52.0 <- 47.0
	===* UNCHANGED INTERFACE: org.apache.commons.chain.Command
	===* UNCHANGED INTERFACE: org.apache.commons.chain.Filter
	===  UNCHANGED SUPERCLASS: org.apache.commons.chain.generic.LookupCommand (<- org.apache.commons.chain.generic.LookupCommand)
	===  UNCHANGED CONSTRUCTOR: PUBLIC PathInfoMapper()
	===  UNCHANGED METHOD: PROTECTED SYNTHETIC (<- NON_SYNTHETIC) BRIDGE (<- NON_BRIDGE) org.apache.commons.chain.Catalog getCatalog(org.apache.commons.chain.Context)
	+++  NEW METHOD: PROTECTED(+) org.apache.commons.chain.Catalog<org.apache.commons.chain.web.servlet.ServletWebContext> getCatalog(org.apache.commons.chain.web.servlet.ServletWebContext)
	===  UNCHANGED METHOD: PUBLIC java.lang.String getCatalogKey()
		+++  NEW ANNOTATION: java.lang.Deprecated
	===  UNCHANGED METHOD: PROTECTED SYNTHETIC (<- NON_SYNTHETIC) BRIDGE (<- NON_BRIDGE) java.lang.String getCommandName(org.apache.commons.chain.Context)
	+++  NEW METHOD: PROTECTED(+) java.lang.String getCommandName(org.apache.commons.chain.web.servlet.ServletWebContext)
	===  UNCHANGED METHOD: PUBLIC void setCatalogKey(java.lang.String)
		+++  NEW ANNOTATION: java.lang.Deprecated
***  MODIFIED CLASS: PUBLIC org.apache.commons.chain.web.servlet.RequestParameterMapper  (not serializable)
	***! CLASS FILE FORMAT VERSION: 52.0 <- 47.0
	===* UNCHANGED INTERFACE: org.apache.commons.chain.Command
	===* UNCHANGED INTERFACE: org.apache.commons.chain.Filter
	===  UNCHANGED SUPERCLASS: org.apache.commons.chain.generic.LookupCommand (<- org.apache.commons.chain.generic.LookupCommand)
	===  UNCHANGED CONSTRUCTOR: PUBLIC RequestParameterMapper()
	===  UNCHANGED METHOD: PROTECTED SYNTHETIC (<- NON_SYNTHETIC) BRIDGE (<- NON_BRIDGE) org.apache.commons.chain.Catalog getCatalog(org.apache.commons.chain.Context)
	+++  NEW METHOD: PROTECTED(+) org.apache.commons.chain.Catalog<org.apache.commons.chain.web.servlet.ServletWebContext> getCatalog(org.apache.commons.chain.web.servlet.ServletWebContext)
	===  UNCHANGED METHOD: PUBLIC java.lang.String getCatalogKey()
	===  UNCHANGED METHOD: PROTECTED SYNTHETIC (<- NON_SYNTHETIC) BRIDGE (<- NON_BRIDGE) java.lang.String getCommandName(org.apache.commons.chain.Context)
	+++  NEW METHOD: PROTECTED(+) java.lang.String getCommandName(org.apache.commons.chain.web.servlet.ServletWebContext)
	===  UNCHANGED METHOD: PUBLIC java.lang.String getParameter()
		+++  NEW ANNOTATION: java.lang.Deprecated
	===  UNCHANGED METHOD: PUBLIC void setCatalogKey(java.lang.String)
		+++  NEW ANNOTATION: java.lang.Deprecated
	===  UNCHANGED METHOD: PUBLIC void setParameter(java.lang.String)
***! MODIFIED CLASS: PUBLIC org.apache.commons.chain.web.servlet.ServletGetLocaleCommand  (not serializable)
	***! CLASS FILE FORMAT VERSION: 52.0 <- 47.0
	===* UNCHANGED INTERFACE: org.apache.commons.chain.Command
	***! MODIFIED SUPERCLASS: org.apache.commons.chain.web.GetLocaleCommand (<- org.apache.commons.chain.web.AbstractGetLocaleCommand)
	===  UNCHANGED CONSTRUCTOR: PUBLIC ServletGetLocaleCommand()
	---! REMOVED METHOD: PROTECTED(-) java.util.Locale getLocale(org.apache.commons.chain.Context)
***  MODIFIED CLASS: PUBLIC org.apache.commons.chain.web.servlet.ServletPathMapper  (not serializable)
	***! CLASS FILE FORMAT VERSION: 52.0 <- 47.0
	===* UNCHANGED INTERFACE: org.apache.commons.chain.Command
	===* UNCHANGED INTERFACE: org.apache.commons.chain.Filter
	===  UNCHANGED SUPERCLASS: org.apache.commons.chain.generic.LookupCommand (<- org.apache.commons.chain.generic.LookupCommand)
	===  UNCHANGED CONSTRUCTOR: PUBLIC ServletPathMapper()
	===  UNCHANGED METHOD: PROTECTED SYNTHETIC (<- NON_SYNTHETIC) BRIDGE (<- NON_BRIDGE) org.apache.commons.chain.Catalog getCatalog(org.apache.commons.chain.Context)
	+++  NEW METHOD: PROTECTED(+) org.apache.commons.chain.Catalog<org.apache.commons.chain.web.servlet.ServletWebContext> getCatalog(org.apache.commons.chain.web.servlet.ServletWebContext)
	===  UNCHANGED METHOD: PUBLIC java.lang.String getCatalogKey()
		+++  NEW ANNOTATION: java.lang.Deprecated
	===  UNCHANGED METHOD: PROTECTED SYNTHETIC (<- NON_SYNTHETIC) BRIDGE (<- NON_BRIDGE) java.lang.String getCommandName(org.apache.commons.chain.Context)
	+++  NEW METHOD: PROTECTED(+) java.lang.String getCommandName(org.apache.commons.chain.web.servlet.ServletWebContext)
	===  UNCHANGED METHOD: PUBLIC void setCatalogKey(java.lang.String)
		+++  NEW ANNOTATION: java.lang.Deprecated
***! MODIFIED CLASS: PUBLIC org.apache.commons.chain.web.servlet.ServletSetLocaleCommand  (not serializable)
	***! CLASS FILE FORMAT VERSION: 52.0 <- 47.0
	===* UNCHANGED INTERFACE: org.apache.commons.chain.Command
	***! MODIFIED SUPERCLASS: org.apache.commons.chain.web.SetLocaleCommand (<- org.apache.commons.chain.web.AbstractSetLocaleCommand)
	===  UNCHANGED CONSTRUCTOR: PUBLIC ServletSetLocaleCommand()
	---! REMOVED METHOD: PROTECTED(-) void setLocale(org.apache.commons.chain.Context, java.util.Locale)
***! MODIFIED CLASS: PUBLIC org.apache.commons.chain.web.servlet.ServletWebContext  (field changed from nontransient to transient)
	***! CLASS FILE FORMAT VERSION: 52.0 <- 47.0
	===  UNCHANGED INTERFACE: java.lang.Cloneable
	===  UNCHANGED INTERFACE: java.util.Map
	===  UNCHANGED INTERFACE: org.apache.commons.chain.Context
	===  UNCHANGED INTERFACE: java.io.Serializable
	===  UNCHANGED SUPERCLASS: org.apache.commons.chain.web.WebContext (<- org.apache.commons.chain.web.WebContext)
	***! MODIFIED FIELD: PRIVATE (<- PROTECTED) javax.servlet.http.HttpServletRequest request
	***! MODIFIED FIELD: PRIVATE (<- PROTECTED) javax.servlet.http.HttpServletResponse response
	***! MODIFIED FIELD: PRIVATE (<- PROTECTED) javax.servlet.ServletContext context
	===  UNCHANGED CONSTRUCTOR: PUBLIC ServletWebContext(javax.servlet.ServletContext, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
	===  UNCHANGED CONSTRUCTOR: PUBLIC ServletWebContext()
	===* UNCHANGED METHOD: PUBLIC java.util.Map<java.lang.String,java.lang.Object> getApplicationScope()
	===  UNCHANGED METHOD: PUBLIC javax.servlet.ServletContext getContext()
	===* UNCHANGED METHOD: PUBLIC java.util.Map<java.lang.String,javax.servlet.http.Cookie> getCookies()
	===* UNCHANGED METHOD: PUBLIC java.util.Map<java.lang.String,java.lang.String> getHeader()
	===* UNCHANGED METHOD: PUBLIC java.util.Map<java.lang.String,java.lang.String[]> getHeaderValues()
	===* UNCHANGED METHOD: PUBLIC java.util.Map<java.lang.String,java.lang.String> getInitParam()
	===* UNCHANGED METHOD: PUBLIC java.util.Map<java.lang.String,java.lang.String> getParam()
	===* UNCHANGED METHOD: PUBLIC java.util.Map<java.lang.String,java.lang.String[]> getParamValues()
	===  UNCHANGED METHOD: PUBLIC javax.servlet.http.HttpServletRequest getRequest()
	===* UNCHANGED METHOD: PUBLIC java.util.Map<java.lang.String,java.lang.Object> getRequestScope()
	===  UNCHANGED METHOD: PUBLIC javax.servlet.http.HttpServletResponse getResponse()
	===* UNCHANGED METHOD: PUBLIC java.util.Map<java.lang.String,java.lang.Object> getSessionScope()
	===  UNCHANGED METHOD: PUBLIC void initialize(javax.servlet.ServletContext, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
	===  UNCHANGED METHOD: PUBLIC void release()
+++  NEW CLASS: PUBLIC(+) ABSTRACT(+) org.apache.commons.chain.web.SetLocaleCommand  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 52.0 <- n.a.
	GENERIC TEMPLATES: +++ C:org.apache.commons.chain.web.WebContext
	+++  NEW INTERFACE: org.apache.commons.chain.Command
	+++  NEW SUPERCLASS: java.lang.Object
	+++  NEW CONSTRUCTOR: PUBLIC(+) SetLocaleCommand(java.util.function.BiConsumer<C,java.util.Locale>)
	+++  NEW METHOD: PUBLIC(+) boolean execute(org.apache.commons.chain.web.WebContext)
		+++  NEW EXCEPTION: java.lang.Exception
	+++  NEW METHOD: PUBLIC(+) java.lang.String getLocaleKey()
	+++  NEW METHOD: PUBLIC(+) void setLocaleKey(java.lang.String)
===* UNCHANGED CLASS: PUBLIC ABSTRACT org.apache.commons.chain.web.WebContext  (compatible)
	***! CLASS FILE FORMAT VERSION: 52.0 <- 47.0
	===  UNCHANGED INTERFACE: java.lang.Cloneable
	===  UNCHANGED INTERFACE: java.util.Map
	===  UNCHANGED INTERFACE: org.apache.commons.chain.Context
	===  UNCHANGED INTERFACE: java.io.Serializable
	===  UNCHANGED SUPERCLASS: org.apache.commons.chain.impl.ContextBase (<- org.apache.commons.chain.impl.ContextBase)
	===  UNCHANGED CONSTRUCTOR: PUBLIC WebContext()
	===* UNCHANGED METHOD: PUBLIC ABSTRACT java.util.Map<java.lang.String,java.lang.Object> getApplicationScope()
	===* UNCHANGED METHOD: PUBLIC ABSTRACT java.util.Map<java.lang.String,javax.servlet.http.Cookie> getCookies()
	===* UNCHANGED METHOD: PUBLIC ABSTRACT java.util.Map<java.lang.String,java.lang.String> getHeader()
	===* UNCHANGED METHOD: PUBLIC ABSTRACT java.util.Map<java.lang.String,java.lang.String[]> getHeaderValues()
	===* UNCHANGED METHOD: PUBLIC ABSTRACT java.util.Map<java.lang.String,java.lang.String> getInitParam()
	===* UNCHANGED METHOD: PUBLIC ABSTRACT java.util.Map<java.lang.String,java.lang.String> getParam()
	===* UNCHANGED METHOD: PUBLIC ABSTRACT java.util.Map<java.lang.String,java.lang.String[]> getParamValues()
	===* UNCHANGED METHOD: PUBLIC ABSTRACT java.util.Map<java.lang.String,java.lang.Object> getRequestScope()
	===* UNCHANGED METHOD: PUBLIC ABSTRACT java.util.Map<java.lang.String,java.lang.Object> getSessionScope()
